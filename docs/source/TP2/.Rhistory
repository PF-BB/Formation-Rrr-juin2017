install.packages("~/Téléchargements/MutationalPatterns_1.0.0.tar.gz", repos = NULL, type = "source")
.libPaths()
install.packages("~/Téléchargements/GenomicRanges_1.26.2.tar.gz", repos = NULL, type = "source")
12+12+24+12+12+24+(12*27)+24+24+12
library(copynumber)
.libPaths("~/tools/R/R-3.2.2/library/")
library(copynumber)
setwd("/mnt/ihu-1-donnees-standard/PROJET/2017/SBI_GTQ_2017-1/SBIGOU/")
data = read.table("SBIGOU_FinalReport.txt", sep="\t", header=TRUE, skip=9)
attach(data)
data.order = data[order(Chr, Position), ]
detach(data)
PSL_16CY001505_logR = data.order[which(data.order[,1] == "PSL_16CY001505"), c(5, 6,16)]
colnames(data.order)
PSL_16CY001505_logR = data.order[which(data.order[,1] == "PSL_16CY001505"), c("Chr","Position", "Log.R.Ratio")]
PSL_16CY001506_logR = data.order[which(data.order[,1] == "PSL_16CY001506"), c("Chr","Position", "Log.R.Ratio")]
logRatio = cbind(PSL_16CY001505_logR, PSL_16CY001506_logR[,3])
colnames(logRatio) = c("chrs", "pos", "PSL_16CY001505", "PSL_16CY001506")
PSL_16CY001505_BAF = data.order[which(data.order[,1] == "PSL_16CY001505"), c("Chr","Position", "B.Allele.Freq")]
PSL_16CY001506_BAF = data.order[which(data.order[,1] == "PSL_16CY001506"), c("Chr","Position", "B.Allele.Freq")]
BAFrequency = cbind(PSL_16CY001505_BAF, PSL_16CY001506_BAF[,3])
colnames(BAFrequency) = c("chrs", "pos", "PSL_16CY001505", "PSL_16CY001506")
idx = c(which(logRatio$chrs == "XY"), which(logRatio$chrs == "Y"))
logRatio = logRatio[-idx, ]
BAFrequency = BAFrequency[-idx, ]
logRatio.wins <- winsorize(logRatio,verbose=FALSE)
idx2 = which(is.na(logRatio.wins$PSL_16CY001505) == TRUE)
idx3 = which(is.na(logRatio.wins$PSL_16CY001506) == TRUE)
idx2
IDX = union(idx2, idx3)
length(IDX)
logRatio.wins.na = logRatio.wins[-IDX,]
idx4 = which(is.na(BAFrequency$PSL_16CY001505) == TRUE)
idx5 = which(is.na(BAFrequency$PSL_16CY001506) == TRUE)
IDXBAF = union(idx4, idx5)
BAFrequency.na = BAFrequency[-IDXBAF,]
allele.segmentation2 <- aspcf(logRatio.wins.na,BAFrequency.na,verbose=FALSE, kmin = 10, gamma = 60)
dim(logRatio.wins.na)
dim(BAFrequency.na)
dim(BAFrequency)
dim(logRatio)
dim(llogRatio.wins)
dim(logRatio.wins)
length(IDX)
length(IDXBAF)
length(intersect(IDX, IDXBAF))
IDXUNION = union(IDX, IDXBAF)
logRatio.wins.na = logRatio.wins[-IDXUNION,]
BAFrequency.na = BAFrequency[-IDXBAF,]
dim(logRatio.wins.na)
dim(BAFrequency.na)
BAFrequency.na = BAFrequency[-IDXUNION,]
dim(BAFrequency.na)
allele.segmentation2 <- aspcf(logRatio.wins.na,BAFrequency.na,verbose=FALSE, kmin = 10, gamma = 60)
pdf("/mnt/ihu-3-analyses-users/PROJET/2017/SBI_GTQ_2017-1/PSL_16CY001505.pdf", width=10,height=4)
for(i in 1:23){
plotAllele(logRatio,BAFrequency,allele.segmentation,sample=1,chrom=i, connect=FALSE)
}
dev.off()
pdf("/mnt/ihu-3-analyses-users/PROJET/2017/SBI_GTQ_2017-1/PSL_16CY001505.pdf", width=10,height=4)
for(i in 1:23){
plotAllele(logRatio,BAFrequency,allele.segmentation2,sample=1,chrom=i, connect=FALSE)
}
dev.off()
pdf("/mnt/ihu-3-analyses-users/PROJET/2017/SBI_GTQ_2017-1/PSL_16CY001506.pdf", width=10,height=4)
for(i in 1:23){
plotAllele(logRatio,BAFrequency,allele.segmentation2,sample=2,chrom=i, connect=FALSE)
}
dev.off()
head(allele.segmentation2)
?aspcf
summary(allele.segmentation2$n.probes)
View (allele.segmentation2)
allele.segmentation2 <- aspcf(logRatio.wins.na,BAFrequency.na,verbose=FALSE, kmin = 10, gamma = 60, save.res=TRUE)
source('/mnt/ihu-3-analyses-users/PROJET/2017/SBI_GTQ_2017-1/script_CNV.R')
table (data.order$Chr)
ls()
write.table(allele.segmentation2, file="/mnt/ihu-3-analyses-users/PROJET/2017/SBI_GTQ_2017-1/segments.txt", quote=FALSE, sep="\t", row.names=FALSE)
idx = which(allele.segmentation2$sampleID=="PSL_16CY001505")
allele.segmentation2[idx, ]
tmp = allele.segmentation2[idx, ]
idx2 = which(tmp$BAF.mean > 0.6)
tmp2 = tmp[idx2,]
tmp2
idx3 = which (tmp2$logR.mean > 0.18 || tmp2$logR.mean < -0.18)
idx3 = tmp2[idx3,]
idx3 = which (tmp2$logR.mean > 0.18 || tmp2$logR.mean < -0.18)
tmp3 = tmp2[idx3,]
tmp3
tmp2
idx = which(allele.segmentation2$sampleID=="PSL_16CY001506")
tmp = allele.segmentation2[idx, ]
idx2 = which(tmp$BAF.mean > 0.6)
tmp2 = tmp[idx2,]
idx3 = which (tmp2$logR.mean > 0.18 || tmp2$logR.mean < -0.18)
tmp3
tmp2
idx3 = which (tmp2$logR.mean > 0.18 | tmp2$logR.mean < -0.18)
idx3
tmp3 = tmp[idx3,]
tmp3
tmp2
idx3 = which (tmp2$logR.mean > 0.15 | tmp2$logR.mean < -0.15)
tmp3 = tmp[idx3,]
tmp3
-0.1852 < -0.15
tmp3 = tmp2[idx3,]
tmp3
506 = tmp3
s506 = tmp3
s506
idx = which(allele.segmentation2$sampleID=="PSL_16CY001505")
tmp = allele.segmentation2[idx, ]
idx2 = which(tmp$BAF.mean > 0.6)
tmp2 = tmp[idx2,]
idx3 = which (tmp2$logR.mean > 0.15 | tmp2$logR.mean < -0.15)
tmp3 = tmp2[idx3,]
tmp3
s506
data(respiratory)
install.packages("geepack")
library("geepack")
data(respiratory)
respiratory
dim(respiratory)
str(respiratory)
head(respiratory)
View(respiratory)
?respiratory
plot(respiratory)
plot(outcome ~ treat, data=respiratory)
boxplot(outcome ~ treat, data=respiratory)
ls()
plot(outcome ~ treat, data=respiratory, type="p")
plot(outcome ~ treat, data=respiratory, type="l")
attach(respiratory)
install.packages("gap")
library("gap")
detach(respiratory)
gap
gapdata(gap)
data(gap)
data(mao)
mao
dim(mao)
str(mao)
?mao
rm(mao)
plot(respiratory$treat, respiratory$baseline)
plot(respiratory$treat, respiratory$baseline, type="p")
plot(respiratory$treat, respiratory$baseline, type="n")
?boxplot
boxplot(respiratory$treat, respiratory$baseline, notch=T)
plot(respiratory$treat, respiratory$baseline, notch=TRUE)
plot(respiratory$treat, respiratory$baseline, notch=FALSE)
plot(respiratory$treat, respiratory$outcome, notch=FALSE)
table(respiratory$treat, respiratory$baseline)
table(respiratory$treat, respiratory$outcome)
test = jitter(respiratory$outcome)
test
boxplot(respiratory$treat, test)
boxplot(respiratory$treat, respiratory$outcome)
plot(respiratory$treat, respiratory$outcome)
points(respiratory$treat, test)
jitter(rep(0, 7))
names=c(rep("A", 80) , rep("B", 50) , rep("C", 70))
value=c( rnorm(80 , mean=10 , sd=9) , rnorm(50 , mean=2 , sd=15) , rnorm(70 , mean=30 , sd=10) )
data=data.frame(names,value)
data
boxplot(data$value ~ data$names , col=terrain.colors(4) )
mylevels<-levels(data$names)
levelProportions<-summary(data$names)/nrow(data)
mylevels
levelProportions
for(i in 1:length(mylevels)){
thislevel<-mylevels[i]
thisvalues<-data[data$names==thislevel, "value"]
# take the x-axis indices and add a jitter, proportional to the N in each level
myjitter<-jitter(rep(i, length(thisvalues)), amount=levelProportions[i]/2)
points(myjitter, thisvalues, pch=20, col=rgb(0,0,0,.2))
}
data(iris)
iris
library("ggplot2", lib.loc="~/tools/R/R-3.2.2/library")
ggplot(factor(Region), Cases, data=orf, geom=c("boxplot", "jitter"),
main=" Cases by Thistles and Regions",fill=factor(Thistles),
xlab="Regions", ylab="Number of cases")
ggplot(factor(Region), Cases, data=orf, geom=c("boxplot", "jitter"),
main=" Cases by Thistles and Regions",fill=factor(Thistles),
xlab="Regions", ylab="Number of cases")
ggplot(factor(Species), Sepal.length, data=iris, geom=c("boxplot", "jitter"),
main=" Cases by Thistles and Regions",fill=factor(Thistles),
xlab="Regions", ylab="Number of cases")
attach(iris)
ggplot(factor(Species), Sepal.length, data=iris, geom=c("boxplot", "jitter"),
main=" Cases by Thistles and Regions",fill=factor(Thistles),
xlab="Regions", ylab="Number of cases")
p2 = ggplot(iris, aes(x=Species, y=Sepal.Length)) +
geom_point(aes(fill=Species), size=5, shape=21, colour="grey20",
position=position_jitter(width=0.2, height=0.1)) +
geom_boxplot(outlier.colour=NA, fill=NA, colour="grey20") +
labs(title="Jittered")
p2
p2 = ggplot(iris, aes(x=Species, y=Sepal.Length)) +
geom_point(aes(fill=Species), size=2, shape=21, colour="grey20",
position=position_jitter(width=0.2, height=0.1)) +
geom_boxplot(outlier.colour=NA, fill=NA, colour="grey20") +
labs(title="Jittered")
p2
p2 = ggplot(iris, aes(x=Species, y=Sepal.Length)) +
geom_point(aes(fill=Species), size=2, shape=21, colour="grey20",
position=position_jitter(width=0.2, height=0.1)) +
geom_boxplot(outlier.colour=NA, fill=Species, colour="grey20") +
labs(title="Jittered")
p2
p2 = ggplot(iris, aes(x=Species, y=Sepal.Length)) +
geom_point(aes(fill=Species), size=2, shape=21, colour="grey20",
position=position_jitter(width=0.2, height=0.1)) +
geom_boxplot(outlier.colour=NA, aes(fill=Species), colour="grey20") +
labs(title="Jittered")
p2
p2 = ggplot(iris, aes(x=Species, y=Sepal.Length)) +
geom_point(aes(fill=Species), size=2, shape=21, colour="grey20",
position=position_jitter(width=0.2, height=0.1)) +
geom_boxplot(outlier.colour=NA, aes(fill=Species), colour="grey20", alpha=0.8) +
labs(title="Jittered")
p2
p2 = ggplot(iris, aes(x=Species, y=Sepal.Length)) +
geom_point(aes(fill=Species), size=2, shape=21, colour="grey20",
position=position_jitter(width=0.2, height=0.1)) +
geom_boxplot(outlier.colour=NA, aes(fill=Species), colour="grey20", alpha=0.3) +
labs(title="Jittered")
p2
p2 = ggplot(iris, aes(x=Species, y=Sepal.Length)) +
geom_point(aes(fill=Species), size=5, shape=21, colour="grey20",
position=position_jitter(width=0.2, height=0.1)) +
geom_boxplot(outlier.colour=NA, aes(fill=Species), colour="grey20", alpha=0.3) +
labs(title="Jittered")
p2
dim(iris)
table(iris)
table(iris$Species)
test = rnorm(20000, mean=0, sd)1.2
test = rnorm(20000, mean=0, sd=1.2)
data = matrix(test, nrow=2000; ncol=100)
data = matrix(test, nrow=2000, ncol=100)
head(data)
summary(data)
test = rnorm(20000, mean=0.5, sd=1.2)
data = matrix(test, nrow=2000, ncol=100)
summary(data)
test = rnorm(20000, mean=5, sd=1.2)
data = matrix(test, nrow=2000, ncol=100)
summary(data)
ctrl = rnorm(2000*20, mean=5, sd=1.2)
pre = rnorm(2000*30, mean=5.5, sd=1.4)
pre = rnorm(2000*50, mean=6, sd=1.8)
pre = rnorm(2000*30, mean=5.5, sd=1.4)
sympto = rnorm(2000*50, mean=6, sd=1.8)
data=matrix(c(ctrl, pre, sympto), nrow=2000, ncol=100)
summary(data)
annot = data.frame(ID=paste("Ind",1:100, sep=""), Group=c(rep("ctrl",20), rep("pre-sympto",30), rep("sympto",50))
annot = data.frame(ID=paste("Ind",1:100, sep=""), Group=c(rep("ctrl",20), rep("pre-sympto",30), rep("sympto",50)))
annot = data.frame(ID=paste("Ind",1:100, sep=""), Group=c(rep("ctrl",20), rep("pre-sympto",30), rep("sympto",50)))
annpt
annot
colnames(data) = paste("Ind",1:100, sep="")
dataplot = data.frame(t(data[1,], group=annot$Group)
dataplot = data.frame(t(data[1,]), group=annot$Group)
head(dataplot)
data[1,]
t(data[1,])
data[1,]
dim(data[1,])
t(t(data[1,]))
dataplot = data.frame(t(t(data[1,])), group=annot$Group)
head(dataplot)
dataplot = data.frame(Expression=t(t(data[1,])), group=annot$Group)
head(dataplot)
p2 = ggplot(dataplot, aes(x=group, y=Expression)) +
geom_point(aes(fill=group), size=5, shape=21, colour="grey20",
position=position_jitter(width=0.2, height=0.1)) +
geom_boxplot(outlier.colour=NA, aes(fill=group), colour="grey20", alpha=0.3) +
labs(title="Jittered")
p2
ctrl = rnorm(2000*20, mean=5, sd=1.2)
pre = rnorm(2000*30, mean=5.5, sd=1.4)
sympto = rnorm(2000*50, mean=7, sd=1.8)
data=matrix(c(ctrl, pre, sympto), nrow=2000, ncol=100)
colnames(data) = paste("Ind",1:100, sep="")
dataplot = data.frame(Expression=t(t(data[1,])), group=annot$Group)
p2 = ggplot(dataplot, aes(x=group, y=Expression)) +
geom_point(aes(fill=group), size=5, shape=21, colour="grey20",
position=position_jitter(width=0.2, height=0.1)) +
geom_boxplot(outlier.colour=NA, aes(fill=group), colour="grey20", alpha=0.3) +
labs(title="Jittered")
p2
p2 = ggplot(dataplot, aes(x=group, y=Expression)) +
geom_point(aes(fill=group), size=5, shape=21, colour="grey20",
position=position_jitter(width=0.2, height=0.1)) +
geom_boxplot(outlier.colour=NA, aes(fill=group), colour="grey20", alpha=0.3, notch=TRUE) +
labs(title="Jittered")
p2
p2 = ggplot(dataplot, aes(x=group, y=Expression)) +
geom_point(aes(fill=group), size=5, shape=21, colour="grey20",
position=position_jitter(width=0.2, height=0.1)) +
geom_boxplot(outlier.colour="black", aes(fill=group), colour="grey20", alpha=0.3, notch=TRUE) +
labs(title="Jittered")
p2
df1 <- data.frame(a = c(1, 1,1,2,2), b = c(8.5, 9,9, 8.5))
df1 <- data.frame(a = c(1,1,2,2), b = c(8.5, 9,9, 8.5))
df1
p2 + geom_line(data = df1, aes(x = a, y = b)) + annotate("text", x = 1.5, y = 38, label = "**", size = 8)
p2
p2 + geom_line(data = df1, aes(x = a, y = b)) + annotate("text", x = 1.5, y = 9.2, label = "**", size = 8)
p2
p2 + geom_line(data = df1, aes(x = a, y = b)) + annotate("text", x = 1.5, y = 9.2, label = "**", size = 8)
df1 <- data.frame(a = c(1,1,2,2), b = c(8.8, 9,9, 8.8))
p2 + geom_line(data = df1, aes(x = a, y = b)) + annotate("text", x = 1.5, y = 9.2, label = "**", size = 8)
p2 = ggplot(dataplot, aes(x=group, y=Expression)) +
geom_point(aes(fill=group), size=5, shape=21, colour="grey20",
position=position_jitter(width=0.2, height=0.1)) +
geom_boxplot(outlier.colour=NA, aes(fill=group), colour="grey20", alpha=0.3, notch=TRUE) +
labs(title="Gene 1")
df1 <- data.frame(a = c(1,1,2,2), b = c(8.8, 9,9, 8.8))
p2 + geom_line(data = df1, aes(x = a, y = b)) + annotate("text", x = 1.5, y = 9.2, label = "**", size = 8)
p2 + geom_line(data = df1, aes(x = a, y = b)) + annotate("text", x = 1.5, y = 9.2, label = "**", size = 8)
p2 = ggplot(dataplot, aes(x=group, y=Expression)) +
geom_point(aes(fill=group), size=5, shape=21, colour="grey20",
position=position_jitter(width=0.2, height=0.1)) +
geom_boxplot(outlier.colour=NA, aes(fill=group), colour="grey20", alpha=0.3, notch=TRUE) +
title("Gene 1")
df1 <- data.frame(a = c(1,1,2,2), b = c(8.8, 9,9, 8.8))
p2 + geom_line(data = df1, aes(x = a, y = b)) + annotate("text", x = 1.5, y = 9.2, label = "**", size = 8)
t.test(data[1, 1:20], data[1, 21:50])
annot
t.test(data[1, 1:20], data[1, 21:50])
t.test(data[1, 1:20], data[1, 21:50], var.equal = TRUE)
t.test(data[1, 21:50], data[1, 51:100], var.equal = TRUE)
t.test(data[1, 21:50], data[1, 51:100])
t.test(data[1, 1:20], data[1, 51:100])
t.test(data[1, 1:20], data[1, 51:100])
?iris
p2 = ggplot(iris, aes(x=Species, y=Setal.Length)) +
geom_point(aes(fill=Species), size=5, shape=21, colour="grey20",
position=position_jitter(width=0.2, height=0.1)) +
geom_boxplot(outlier.colour=NA, aes(fill=group), colour="grey20", alpha=0.3, notch=TRUE) +
title("Sepal length")
p2 = ggplot(iris, aes(x=Species, y=Setal.Length)) +
geom_point(aes(fill=Species), size=5, shape=21, colour="grey20",
position=position_jitter(width=0.2, height=0.1)) +
geom_boxplot(outlier.colour=NA, aes(fill=group), colour="grey20", alpha=0.3, notch=TRUE) +
title("Sepal length")
p2 = ggplot(iris, aes(x=Species, y=Setal.Length)) +
geom_point(aes(fill=Species), size=5, shape=21, colour="grey20",
position=position_jitter(width=0.2, height=0.1)) +
geom_boxplot(outlier.colour=NA, aes(fill=Species), colour="grey20", alpha=0.3, notch=TRUE) +
title("Sepal length")
colnames(iris)
res1 = t.test(iris$Sepal.Length[1:50], iris$Sepal.Length[51:100])
res
res1
View(iris)
p2 = ggplot(iris, aes(x=Species, y=Petal.Length)) +
geom_point(aes(fill=Species), size=5, shape=21, colour="grey20",
position=position_jitter(width=0.2, height=0.1)) +
geom_boxplot(outlier.colour=NA, aes(fill=Species), colour="grey20", alpha=0.3) +
ggtitle("Sepal length")
p2
p2 = ggplot(iris, aes(x=Species, y=Petal.Width)) +
geom_point(aes(fill=Species), size=5, shape=21, colour="grey20",
position=position_jitter(width=0.2, height=0.1)) +
geom_boxplot(outlier.colour=NA, aes(fill=Species), colour="grey20", alpha=0.3) +
ggtitle("Sepal length")
p2
p2 = ggplot(iris, aes(x=Species, y=Sepal.Width)) +
geom_point(aes(fill=Species), size=5, shape=21, colour="grey20",
position=position_jitter(width=0.2, height=0.1)) +
geom_boxplot(outlier.colour=NA, aes(fill=Species), colour="grey20", alpha=0.3) +
ggtitle("Sepal length")
p2
res1 = t.test(iris$Sepal.Width[which(iris$Species == "setosa")], iris$Sepal.Width[which(iris$Species == "versicolor")])
res1
res2 = t.test(iris$Sepal.Width[which(iris$Species == "versicolor")], iris$Sepal.Width[which(iris$Species == "setosa")])
res2
p2 = ggplot(iris, aes(x=Species, y=Sepal.Width)) +
geom_point(aes(fill=Species), size=5, shape=21, colour="grey20",
position=position_jitter(width=0.2, height=0.1)) +
geom_boxplot(outlier.colour=NA, aes(fill=Species), colour="grey20", alpha=0.3) +
ggtitle("Sepal width")
p2
summary(iris)
mean(iris$Sepal.Width[51:100])
mean(iris$Sepal.Width[101:150])
mean(iris$Sepal.Width[1:50])
res2 = t.test(iris$Sepal.Width[which(iris$Species == "versicolor")], iris$Sepal.Width[which(iris$Species == "virginica")])
res2
knitr::kable(table(iris$Species))
df1 <- data.frame(a = c(1,1,2,2), b = c(4.4, 4.5,4.5,4.4))
dim(data)
head(data)
rownames(data) paste("g",1:2000, sep="")
rownames(data) = paste("g",1:2000, sep="")
setwd("/mnt/ihu-3-analyses-users/PROJET/2017/Formation-Rrr-2017/Formation-Rrrr/docs/source/TP2/");write.table(cbind(ID=rownames(data), data), quote=FALSE, sep="\t", row.names=FALSE)
write.table(cbind(ID=rownames(data), data), file="expressionMatrix.txt",quote=FALSE, sep="\t", row.names=FALSE)
write.table(annot, file="annotMatrix.txt",quote=FALSE, sep="\t", row.names=FALSE)
annot
expr = read.table("expressionMatrix.txt", sep="\t", header=TRUE, row.names=1)
# lire fichier d'annotations des individus et le stocker dans un objet
annot = read.table("annotMatrix.txt", sep="\t", header=TRUE)
gene="gene1"
exprGene = expr[gene, ]
exprGene
head(expr)
gene="g1"
exprGene = expr[gene, ]
exprGene
t(exprGene)
out = data.frame(expression=t(exprGene), group=annot$Group)
#ecrire la table de sortie
write.table(out, file="gene1.txt", sep="\t", quote=FALSE, row.names=FALSE)
out
data = read.table("gene1.txt", sep="\t", header=TRUE)
data
data = read.table("gene1.txt", sep="\t", header=TRUE, row.names=1)
head(data)
data(golub)
browseVignettes("pathview")
library(pathview)
.libPaths()
source("http://bioconductor.org/biocLite.R")
biocLite("pathview")
library(pathview)
browseVignettes("pathview")
?pathview
genes = read.table("genes.txt", sep="\t", header=FALSE)
genes = read.table("genes.txt", sep="\t", header=FALSE)
genes
pathwayID = "hsa04110"
geneIDTYPE = "SYMBOL"
pathview(genes, pathway.id = pathwayID, gene.idtype = geneIDTYPE)
pathview(as.vector(genes), pathway.id = pathwayID, gene.idtype = geneIDTYPE)
as.vector(genes)
rownames(genes) = as.vector(genes)
n
rownames(genes) = as.vector(genes[,1])
pathview(genes, pathway.id = pathwayID, gene.idtype = geneIDTYPE)
pathview(genes, pathway.id = pathwayID, gene.idtype = geneIDTYPE,plot.col.key= FALSE)
genes = read.table("genes.csv", sep="\t", header=FALSE)
genes = read.table("genes.csv", sep="\t", header=FALSE)
genes = read.table("myGenes.csv", sep="\t", header=FALSE)
genes
g
genes = read.table("myGenes.csv", sep=";", header=TRUE)
myGenes = genes[,2]
rownames(myGenes) = as.vector(myGenes[,2])
rownames(myGenes) = myGenes
rownames(myGenes) = myGenes[,1]
myGenes
genes
class(genes)
rownames(genes) = genes[,2]
genes
h
pathwayID = "hsa04012"
geneIDTYPE = "SYMBOL"
pathview(genes, pathway.id = pathwayID, gene.idtype = geneIDTYPE,plot.col.key= FALSE)
pathview(genes[,2], pathway.id = pathwayID, gene.idtype = geneIDTYPE,plot.col.key= FALSE)
genes
genes[,2]
genes = read.table("myGenes.csv", sep=";", header=TRUE, stringsAsFactors = FALSE)
rownames(genes) = genes[,2]
pathwayID = "hsa04012"
geneIDTYPE = "SYMBOL"
pathview(genes[,2], pathway.id = pathwayID, gene.idtype = geneIDTYPE,plot.col.key= FALSE)
genes
class(genes)
genes = read.table("myGenes.csv", sep=";", header=TRUE, stringsAsFactors = FALSE)
class(genes)
?read.table
### Exercice 1 : From iris data to expression data
source('/mnt/ihu-3-analyses-users/PROJET/2017/Formation-Rrr-2017/Formation-Rrrr/docs/source/TP2/iris.R')
data(iris)
head(iris)
table(iris$Species)
summary(iris)
#Graphics
library(ggplot2)
p2 = ggplot(iris, aes(x=Species, y=Sepal.Width)) +
geom_point(aes(fill=Species), size=5, shape=21, colour="grey20",
position=position_jitter(width=0.2, height=0.1)) +
geom_boxplot(outlier.colour=NA, aes(fill=Species), colour="grey20", alpha=0.3) +
ggtitle("Sepal width")
p2
#T test
res1 = t.test(iris$Sepal.Width[which(iris$Species == "setosa")], iris$Sepal.Width[which(iris$Species == "versicolor")])
res1
res2 = t.test(iris$Sepal.Width[which(iris$Species == "versicolor")], iris$Sepal.Width[which(iris$Species == "virginica")])
res2
#New graph
df1 <- data.frame(a = c(1,1,2,2), b = c(4.5, 4.6,4.6,4.5))
df2 <- data.frame(a = c(2,2,3,3), b = c(3.9, 4,4,3.9))
p3 = p2 + geom_line(data = df1, aes(x = a, y = b)) + annotate("text", x = 1.5, y = 4.65, label = "***", size = 8) +
geom_line(data = df2, aes(x = a, y = b)) + annotate("text", x = 2.5, y = 4.05, label = "*", size = 8)
pdf("sepalWidth.pdf")
p3
dev.off()
source('/mnt/ihu-3-analyses-users/PROJET/2017/Formation-Rrr-2017/Formation-Rrrr/docs/source/TP2/iris.R')
dev.off()
source('/mnt/ihu-3-analyses-users/PROJET/2017/Formation-Rrr-2017/Formation-Rrrr/docs/source/TP2/iris.R')
source('/mnt/ihu-3-analyses-users/PROJET/2017/Formation-Rrr-2017/Formation-Rrrr/docs/source/TP2/iris.R')
rm(list=ls())
